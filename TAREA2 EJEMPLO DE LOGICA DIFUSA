import numpy as np
import skfuzzy as fuzz
from skfuzzy import control as ctrl
import matplotlib.pyplot as plt

temperatura = ctrl.Antecedent(np.arange(10, 41, 1), 'temperatura')
humedad = ctrl.Antecedent(np.arange(0, 101, 1), 'humedad')
ventilacion = ctrl.Consequent(np.arange(0, 101, 1), 'ventilacion')

temperatura['fria'] = fuzz.trimf(temperatura.universe, [10, 10, 20])
temperatura['templada'] = fuzz.trimf(temperatura.universe, [15, 25, 30])
temperatura['caliente'] = fuzz.trimf(temperatura.universe, [25, 40, 40])

humedad['baja'] = fuzz.trimf(humedad.universe, [0, 0, 40])
humedad['media'] = fuzz.trimf(humedad.universe, [30, 50, 70])
humedad['alta'] = fuzz.trimf(humedad.universe, [60, 100, 100])

ventilacion['baja'] = fuzz.trimf(ventilacion.universe, [0, 0, 50])
ventilacion['media'] = fuzz.trimf(ventilacion.universe, [30, 50, 70])
ventilacion['alta'] = fuzz.trimf(ventilacion.universe, [50, 100, 100])


print("Conjuntos difusos para la temperatura:")
temperatura.view()
plt.show()

print("Conjuntos difusos para la humedad:")
humedad.view()
plt.show()

print("Conjuntos difusos para la ventilación:")
ventilacion.view()
plt.show()


regla1 = ctrl.Rule(temperatura['fria'] & humedad['baja'], ventilacion['baja'])
regla2 = ctrl.Rule(temperatura['templada'] & humedad['media'], ventilacion['media'])
regla3 = ctrl.Rule(temperatura['caliente'] & humedad['alta'], ventilacion['alta'])

sistema_control = ctrl.ControlSystem([regla1, regla2, regla3])
sistema = ctrl.ControlSystemSimulation(sistema_control)


sistema.input['temperatura'] = 28  # Temperatura en °C
sistema.input['humedad'] = 65      # Humedad en %

sistema.compute()

velocidad_ventilacion = sistema.output['ventilacion']
print(f"Velocidad del ventilador: {velocidad_ventilacion:.2f}%")

print("Salida difusa para la ventilación:")
ventilacion.view(sim=sistema)
plt.show()
